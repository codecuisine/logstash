input {
  beats {
    codec => "json"
    port => 5001
    type => "logs"
    ssl => true
    ssl_verify_mode => "peer"
    ssl_certificate => "/app/logstash.crt"
    ssl_key => "/app/logstash.key"
    ssl_certificate_authorities => ["/app/logstash_ca.crt"]
  }
}
filter {
  if [type] == "cells" {
    json {
    source => "_source"
    }
  }
  if [type] == "scan" {
    json {
    source => "_source"
    }
  }
  if [type] == "gsm_modem_channel" {
    json {
    source => "_source"
    }
  }
  if [type] == "kal_channel" {
    json {
    source => "_source"
    }
  }
  if [type] == "geoip" {
    json {
    source => "_source"
    }
  }
  if [type] == "gpsd" {
    json {
    source => "_source"
    }
  }
  if [type] == "arfcn_enricher" {
    json {
    source => "_source"
    }
  }
  if [type] == "heartbeat" {
    json {
    source => "_source"
    }
  }
  if [type] == "health_check" {
    json {
    source => "_source"
    }
  }
  if [type] == "sitch_init" {
    json {
    source => "_source"
    }
  }
  if [type] == "sitch_alert" {
    json {
    source => "_source"
    }
  }
  mutate {
  add_field => { "[gps_location][lat]" => "%{[location][coordinates][1]}" }
  add_field => { "[gps_location][lon]" => "%{[location][coordinates][0]}" }
  }
  mutate {
  convert => { "[gps_location][lat]" => "float" }
  convert => { "[gps_location][lon]" => "float" }
  }
}
output {
    if [type] == "sitch_alert"{
      slack {
          url => "${SLACK_WEBHOOK}"
          username => "${SLACK_USERNAME}"
          icon_emoji => "${SLACK_ICON}"
          format => "Message Type: %{id} | Original Message: %{details} | Host ID: %{host}"
        }
      }
    else if [type] == "kal_channel"{
      influxdb {
        host        => "${INFLUXDB_HOST}"
        port        => "${INFLUXDB_PORT}"
        db          => "sitch"
        measurement => "arfcn_power"
        coerce_values => { "power" => "float" }
        data_points => { "band" => "%{band}"
                         "channel" => "%{channel}"
                         "host" => "%{host}"
                         "power" => "%{power}"
                         "scan_program" => "%{scan_program}"
                         "sensor_name" => "%{sensor_name}"
                         "sensor_id" => "%{sensor_id}"
                         "site_name" => "%{site_name}"
                          }
        send_as_tags => [ "band", "channel", "host", "scan_program",
                          "sensor_name", "sensor_id", "site_name"]
      }
    }
    else if [type] == "gsm_modem_channel" {
      influxdb {
        host        => "${INFLUXDB_HOST}"
        port        => "${INFLUXDB_PORT}"
        db          => "sitch"
        measurement => "bts_metadata"
        coerce_values => { "arfcn" => "integer"
                           "distance" => "float"
                           "rxl" => "float"
                           "txp" => "float"
                           "ta" => "float"
                           "rxq" => "float"
                           "rla" => "float" }
        data_points => { "arfcn" => "%{arfcn}"
                         "band" => "%{band}"
                         "cell" => "%{cell}"
                         "distance" => "%{distance}"
                         "host" => "%{host}"
                         "rla" => "%{rla}"
                         "rxl" => "%{rxl}"
                         "rxq" => "%{rxq}"
                         "sensor_name" => "%{sensor_name}"
                         "sensor_id" => "%{sensor_id}"
                         "site_name" => "%{site_name}"
                         "txp" => "%{txp}"
                         "ta" => "%{ta}" }
        send_as_tags => [ "band", "cell", "host", "sensor_name",
                          "sensor_id", "site_name"]
      }
    }
      elasticsearch { hosts => ["${ES_URL}"] }
}
